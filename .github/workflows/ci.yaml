name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          PLAT: linux
          EXE: otio-cpp-example
          EXE_DIR: build
        - os: windows-latest
          PLAT: windows
          EXE: otio-cpp-example.exe
          EXE_DIR: build/Debug
        - os: macos-latest
          PLAT: mac
          EXE: otio-cpp-example
          EXE_DIR: build

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Linux Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        #sudo apt-get install -y gcc-multilib g++-multilib

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      # Note: Use default shell here, so on Windows, powershell will handle \ vs / path separator.
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake .. -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build .

    - name: Test
      working-directory: ${{github.workspace}}/${{ matrix.EXE_DIR }}
      shell: bash
      run: |
        ./${{ matrix.EXE }}

